Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                              touch.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              usbdrv.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o)
                              main.o (srand)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o) (__mulsi3)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o) (__divmodsi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv.o
p                   0x2               main.o
x                   0x1000            main.o
_adc_pin_qty        0x1               atmega-adc.o
usbTxStatus1        0xc               usbdrv.o
usbDeviceAddr       0x1               usbdrv.o
_adc_handler        0x2               atmega-adc.o
usbRxToken          0x1               usbdrv.o
usbInputBufOffset   0x1               usbdrv.o
usbMsgPtr           0x2               usbdrv.o
usbRxLen            0x1               usbdrv.o
usbNewDeviceAddr    0x1               usbdrv.o
usbCurrentTok       0x1               usbdrv.o
usbConfiguration    0x1               usbdrv.o
usbRxBuf            0x16              usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
LOAD usbdrv.o
LOAD usbdrvasm.o
LOAD oddebug.o
LOAD touch.o
LOAD atmega-adc.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x13d4
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000000000000e4       0x34 usbdrv.o
                0x00000000000000e4                usbDescriptorString0
                0x00000000000000e8                usbDescriptorStringVendor
                0x000000000000010c                usbDescriptorStringDevice
 .progmem.data  0x0000000000000118       0x77 main.o
                0x0000000000000190                . = ALIGN (0x2)
 *fill*         0x000000000000018f        0x1 00
                0x0000000000000190                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000190        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000190                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000190                __ctors_start = .
 *(.ctors)
                0x0000000000000190                __ctors_end = .
                0x0000000000000190                __dtors_start = .
 *(.dtors)
                0x0000000000000190                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000190        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
                0x0000000000000190                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000190        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000019c       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x000000000000019c                __do_copy_data
 .init4         0x00000000000001b2       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x00000000000001b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000001c2        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 *(.init9)
 *(.text)
 .text          0x00000000000001ca        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
                0x00000000000001ca                __vector_38
                0x00000000000001ca                __vector_22
                0x00000000000001ca                __vector_28
                0x00000000000001ca                __vector_32
                0x00000000000001ca                __vector_34
                0x00000000000001ca                __vector_24
                0x00000000000001ca                __vector_12
                0x00000000000001ca                __vector_55
                0x00000000000001ca                __vector_46
                0x00000000000001ca                __bad_interrupt
                0x00000000000001ca                __vector_6
                0x00000000000001ca                __vector_31
                0x00000000000001ca                __vector_35
                0x00000000000001ca                __vector_39
                0x00000000000001ca                __vector_3
                0x00000000000001ca                __vector_23
                0x00000000000001ca                __vector_30
                0x00000000000001ca                __vector_45
                0x00000000000001ca                __vector_25
                0x00000000000001ca                __vector_11
                0x00000000000001ca                __vector_54
                0x00000000000001ca                __vector_17
                0x00000000000001ca                __vector_19
                0x00000000000001ca                __vector_56
                0x00000000000001ca                __vector_7
                0x00000000000001ca                __vector_49
                0x00000000000001ca                __vector_41
                0x00000000000001ca                __vector_43
                0x00000000000001ca                __vector_27
                0x00000000000001ca                __vector_5
                0x00000000000001ca                __vector_33
                0x00000000000001ca                __vector_47
                0x00000000000001ca                __vector_52
                0x00000000000001ca                __vector_37
                0x00000000000001ca                __vector_4
                0x00000000000001ca                __vector_44
                0x00000000000001ca                __vector_51
                0x00000000000001ca                __vector_9
                0x00000000000001ca                __vector_2
                0x00000000000001ca                __vector_15
                0x00000000000001ca                __vector_36
                0x00000000000001ca                __vector_40
                0x00000000000001ca                __vector_8
                0x00000000000001ca                __vector_26
                0x00000000000001ca                __vector_48
                0x00000000000001ca                __vector_14
                0x00000000000001ca                __vector_53
                0x00000000000001ca                __vector_10
                0x00000000000001ca                __vector_50
                0x00000000000001ca                __vector_16
                0x00000000000001ca                __vector_18
                0x00000000000001ca                __vector_20
                0x00000000000001ca                __vector_42
 .text          0x00000000000001ce      0x2fe usbdrv.o
                0x00000000000001ce                usbSetInterrupt
                0x000000000000021c                usbPoll
                0x00000000000004b2                usbInit
 .text          0x00000000000004cc      0x27a usbdrvasm.o
                0x00000000000004cc                usbCrc16
                0x00000000000004f6                usbCrc16Append
                0x00000000000004fe                __vector_1
 .text          0x0000000000000746        0x0 oddebug.o
 .text          0x0000000000000746      0x12e touch.o
                0x000000000000076e                touch_init
                0x000000000000078a                touch_measure
 .text          0x0000000000000874      0x130 atmega-adc.o
                0x0000000000000874                adc_read
                0x00000000000008c0                adc_start
                0x00000000000008e2                adc_stop
                0x00000000000008e8                __vector_29
 .text          0x00000000000009a4      0x836 main.o
                0x00000000000009a4                IOConf
                0x00000000000009c4                timerCC_init
                0x00000000000009e0                __vector_21
                0x00000000000009fe                timerPWM_init
                0x0000000000000a24                pwm_init
                0x0000000000000a6a                __vector_13
                0x0000000000000b72                parseMidiMessage
                0x0000000000000d56                usbFunctionDescriptor
                0x0000000000000d7e                usbFunctionSetup
                0x0000000000000d98                usbFunctionWriteOut
                0x0000000000000d9e                usbFunctionWrite
                0x0000000000000da2                usbFunctionRead
                0x0000000000000da6                eepromWrite
                0x0000000000000dba                startBootloader
                0x0000000000000e56                main
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_prologue.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_epilogue.o)
 .text          0x00000000000011da        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                0x00000000000011da                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000011da       0x28 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                0x00000000000011da                __udivmodhi4
 .text.libgcc   0x0000000000001202        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001202        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001202        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000001202       0xa8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o)
                0x0000000000001284                rand_r
                0x000000000000128a                rand
                0x0000000000001294                srand
 .text.libgcc   0x00000000000012aa       0x3e /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
                0x00000000000012aa                __mulsi3
 .text.libgcc   0x00000000000012e8       0x36 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
                0x00000000000012e8                __divmodsi4
 .text.libgcc   0x000000000000131e       0x38 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_prologue.o)
                0x000000000000131e                __prologue_saves__
 .text.libgcc   0x0000000000001356       0x36 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_epilogue.o)
                0x0000000000001356                __epilogue_restores__
 .text.libgcc   0x000000000000138c       0x44 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                0x000000000000138c                __udivmodsi4
                0x00000000000013d0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000013d0        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x00000000000013d0                exit
                0x00000000000013d0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000013d0        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000013d4                _etext = .

.data           0x0000000000800200       0x80 load address 0x00000000000013d4
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 .data          0x0000000000800200        0x2 usbdrv.o
                0x0000000000800200                usbTxLen
 .data          0x0000000000800202        0x0 usbdrvasm.o
 .data          0x0000000000800202        0x0 oddebug.o
 .data          0x0000000000800202        0x0 touch.o
 .data          0x0000000000800202        0x0 atmega-adc.o
 .data          0x0000000000800202       0x7a main.o
                0x0000000000800202                f
                0x000000000080021a                jump_to_bootloader
 .data          0x000000000080027c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x000000000080027c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x000000000080027c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080027c        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x000000000080027c        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o)
 .data          0x0000000000800280        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .data          0x0000000000800280        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800280        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800280        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800280        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800280                . = ALIGN (0x2)
                0x0000000000800280                _edata = .
                0x0000000000800280                PROVIDE (__data_end, .)

.bss            0x0000000000800280     0x1058
                0x0000000000800280                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800280        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 .bss           0x0000000000800280        0x1 usbdrv.o
 .bss           0x0000000000800281        0x0 usbdrvasm.o
 .bss           0x0000000000800281        0x0 oddebug.o
 .bss           0x0000000000800281        0x0 touch.o
 .bss           0x0000000000800281        0x1 atmega-adc.o
 .bss           0x0000000000800282       0x1b main.o
                0x0000000000800282                sendCC
                0x0000000000800283                currentNoteBuffer
                0x000000000080028f                lastNoteBuffer
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_mulsi3.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_prologue.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_epilogue.o)
 .bss           0x000000000080029d        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080029d       0x36 usbdrv.o
                0x000000000080029d                usbTxBuf
                0x00000000008002a8                usbTxStatus1
                0x00000000008002b4                usbDeviceAddr
                0x00000000008002b5                usbRxToken
                0x00000000008002b6                usbInputBufOffset
                0x00000000008002b7                usbMsgPtr
                0x00000000008002b9                usbRxLen
                0x00000000008002ba                usbNewDeviceAddr
                0x00000000008002bb                usbCurrentTok
                0x00000000008002bc                usbConfiguration
                0x00000000008002bd                usbRxBuf
 COMMON         0x00000000008002d3        0x3 atmega-adc.o
                0x00000000008002d3                _adc_pin_qty
                0x00000000008002d4                _adc_handler
 COMMON         0x00000000008002d6     0x1002 main.o
                0x00000000008002d6                p
                0x00000000008002d8                x
                0x00000000008012d8                PROVIDE (__bss_end, .)
                0x00000000000013d4                __data_load_start = LOADADDR (.data)
                0x0000000000001454                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008012d8        0x0
                0x00000000008012d8                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008012d8                PROVIDE (__noinit_end, .)
                0x00000000008012d8                _end = .
                0x00000000008012d8                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x34b0
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 .stab          0x00000000000006cc      0xc60 usbdrv.o
                                        0xc6c (size before relaxing)
 .stab          0x000000000000132c      0x168 oddebug.o
                                        0x3e4 (size before relaxing)
 .stab          0x0000000000001494      0x474 touch.o
                                        0x6c0 (size before relaxing)
 .stab          0x0000000000001908      0x414 atmega-adc.o
                                        0x5dc (size before relaxing)
 .stab          0x0000000000001d1c     0x1494 main.o
                                       0x17ac (size before relaxing)
 .stab          0x00000000000031b0      0x300 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(rand.o)
                                        0x330 (size before relaxing)

.stabstr        0x0000000000000000     0x1728
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1728 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(ebarn.elf elf32-avr)
LOAD linker stubs
