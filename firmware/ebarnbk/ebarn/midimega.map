Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv.o
usbTxStatus1        0xc               usbdrv.o
usbDeviceAddr       0x1               usbdrv.o
usbRxToken          0x1               usbdrv.o
usbInputBufOffset   0x1               usbdrv.o
usbMsgPtr           0x2               usbdrv.o
usbRxLen            0x1               usbdrv.o
usbNewDeviceAddr    0x1               usbdrv.o
usbCurrentTok       0x1               usbdrv.o
usbConfiguration    0x1               usbdrv.o
usbRxBuf            0x16              usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
LOAD usbdrv.o
LOAD usbdrvasm.o
LOAD oddebug.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x7ea
 *(.vectors)
 .vectors       0x0000000000000000       0xe4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000000000000e4       0x3c usbdrv.o
                0x00000000000000e4                usbDescriptorString0
                0x00000000000000e8                usbDescriptorStringVendor
                0x000000000000010a                usbDescriptorStringDevice
 .progmem.data  0x0000000000000120       0x77 main.o
                0x0000000000000198                . = ALIGN (0x2)
 *fill*         0x0000000000000197        0x1 00
                0x0000000000000198                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000198        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000198                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000198                __ctors_start = .
 *(.ctors)
                0x0000000000000198                __ctors_end = .
                0x0000000000000198                __dtors_start = .
 *(.dtors)
                0x0000000000000198                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000198        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
                0x0000000000000198                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000198        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000001a4       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x00000000000001a4                __do_copy_data
 .init4         0x00000000000001ba       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x00000000000001ba                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000001ca        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 *(.init9)
 *(.text)
 .text          0x00000000000001d2        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
                0x00000000000001d2                __vector_38
                0x00000000000001d2                __vector_22
                0x00000000000001d2                __vector_28
                0x00000000000001d2                __vector_32
                0x00000000000001d2                __vector_34
                0x00000000000001d2                __vector_24
                0x00000000000001d2                __vector_12
                0x00000000000001d2                __vector_55
                0x00000000000001d2                __vector_46
                0x00000000000001d2                __bad_interrupt
                0x00000000000001d2                __vector_6
                0x00000000000001d2                __vector_31
                0x00000000000001d2                __vector_35
                0x00000000000001d2                __vector_39
                0x00000000000001d2                __vector_3
                0x00000000000001d2                __vector_23
                0x00000000000001d2                __vector_30
                0x00000000000001d2                __vector_45
                0x00000000000001d2                __vector_25
                0x00000000000001d2                __vector_11
                0x00000000000001d2                __vector_54
                0x00000000000001d2                __vector_13
                0x00000000000001d2                __vector_17
                0x00000000000001d2                __vector_19
                0x00000000000001d2                __vector_56
                0x00000000000001d2                __vector_7
                0x00000000000001d2                __vector_49
                0x00000000000001d2                __vector_41
                0x00000000000001d2                __vector_43
                0x00000000000001d2                __vector_27
                0x00000000000001d2                __vector_5
                0x00000000000001d2                __vector_33
                0x00000000000001d2                __vector_47
                0x00000000000001d2                __vector_52
                0x00000000000001d2                __vector_37
                0x00000000000001d2                __vector_4
                0x00000000000001d2                __vector_44
                0x00000000000001d2                __vector_51
                0x00000000000001d2                __vector_9
                0x00000000000001d2                __vector_2
                0x00000000000001d2                __vector_21
                0x00000000000001d2                __vector_15
                0x00000000000001d2                __vector_36
                0x00000000000001d2                __vector_29
                0x00000000000001d2                __vector_40
                0x00000000000001d2                __vector_8
                0x00000000000001d2                __vector_26
                0x00000000000001d2                __vector_48
                0x00000000000001d2                __vector_14
                0x00000000000001d2                __vector_53
                0x00000000000001d2                __vector_10
                0x00000000000001d2                __vector_50
                0x00000000000001d2                __vector_16
                0x00000000000001d2                __vector_18
                0x00000000000001d2                __vector_20
                0x00000000000001d2                __vector_42
 .text          0x00000000000001d6      0x2fe usbdrv.o
                0x00000000000001d6                usbSetInterrupt
                0x0000000000000224                usbPoll
                0x00000000000004ba                usbInit
 .text          0x00000000000004d4      0x27a usbdrvasm.o
                0x00000000000004d4                usbCrc16
                0x00000000000004fe                usbCrc16Append
                0x0000000000000506                __vector_1
 .text          0x000000000000074e        0x0 oddebug.o
 .text          0x000000000000074e       0x98 main.o
                0x000000000000074e                usbFunctionDescriptor
                0x0000000000000776                usbFunctionSetup
                0x0000000000000790                usbFunctionRead
                0x00000000000007a4                usbFunctionWrite
                0x00000000000007a8                usbFunctionWriteOut
                0x00000000000007aa                main
 .text          0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x00000000000007e6                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x00000000000007e6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000007e6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x00000000000007e6                exit
                0x00000000000007e6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000007e6        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000007ea                _etext = .

.data           0x0000000000800200        0x2 load address 0x00000000000007ea
                0x0000000000800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800200        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 .data          0x0000000000800200        0x2 usbdrv.o
                0x0000000000800200                usbTxLen
 .data          0x0000000000800202        0x0 usbdrvasm.o
 .data          0x0000000000800202        0x0 oddebug.o
 .data          0x0000000000800202        0x0 main.o
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800202        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800202                . = ALIGN (0x2)
                0x0000000000800202                _edata = .
                0x0000000000800202                PROVIDE (__data_end, .)

.bss            0x0000000000800202       0x38
                0x0000000000800202                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800202        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 .bss           0x0000000000800202        0x1 usbdrv.o
 .bss           0x0000000000800203        0x0 usbdrvasm.o
 .bss           0x0000000000800203        0x0 oddebug.o
 .bss           0x0000000000800203        0x1 main.o
 .bss           0x0000000000800204        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800204        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800204        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800204       0x36 usbdrv.o
                0x0000000000800204                usbTxBuf
                0x000000000080020f                usbTxStatus1
                0x000000000080021b                usbDeviceAddr
                0x000000000080021c                usbRxToken
                0x000000000080021d                usbInputBufOffset
                0x000000000080021e                usbMsgPtr
                0x0000000000800220                usbRxLen
                0x0000000000800221                usbNewDeviceAddr
                0x0000000000800222                usbCurrentTok
                0x0000000000800223                usbConfiguration
                0x0000000000800224                usbRxBuf
                0x000000000080023a                PROVIDE (__bss_end, .)
                0x00000000000007ea                __data_load_start = LOADADDR (.data)
                0x00000000000007ec                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080023a        0x0
                0x000000000080023a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080023a                PROVIDE (__noinit_end, .)
                0x000000000080023a                _end = .
                0x000000000080023a                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x195c
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o
 .stab          0x00000000000006cc      0xc60 usbdrv.o
                                        0xc6c (size before relaxing)
 .stab          0x000000000000132c      0x168 oddebug.o
                                        0x3e4 (size before relaxing)
 .stab          0x0000000000001494      0x4c8 main.o
                                        0x78c (size before relaxing)

.stabstr        0x0000000000000000      0xf28
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf28 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm640.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(midimega.elf elf32-avr)
LOAD linker stubs
